name: Terraform Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform action (apply or destroy)'
        required: true
        default: 'apply'

jobs:
  terraform:
    name: Terraform Deployment
    runs-on: ubuntu-latest
    env:
          TF_VAR_github_token: ${{ secrets.TOKEN_GIT }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.LEO_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.LEO_SECRET_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Validate Terraform
        run: terraform validate
        working-directory: terraform


      - name: Plan Terraform
        run: terraform plan -out=tfplan -var-file="terraform.tfvars"
        working-directory: terraform
          #for lex
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq


      - name: Apply Terraform 
        if: github.event.inputs.action == 'apply' || github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -var-file="terraform.tfvars"
        working-directory: terraform

      - name: Get Terraform outputs
        if: github.event.inputs.action != 'destroy'
        run: |
          RAW_URL=$(terraform output -raw api_gateway_url)
          echo "API_GW_BASE_URL=$RAW_URL" >> $GITHUB_ENV
        working-directory: terraform

      # Option 1: Create .env file approach
      - name: Create .env file for React
        if: github.event.inputs.action != 'destroy'
        run: |
          echo "REACT_APP_API_BASE_URL=${{ env.API_GW_BASE_URL }}" > fisc-ai/frontend/.env

      # Option 2: Using environment variable directly in build
      - name: Build frontend
        if: github.event.inputs.action != 'destroy'
        run: |
          cd fisc-ai/frontend
          npm ci
          REACT_APP_API_BASE_URL=${{ env.API_GW_BASE_URL }} npm run build

      # - name: Get Terraform outputs
      #   run: |
      #       RAW_URL=$(terraform output -raw api_gateway_url | tr -d '\n\"')
      #       echo "API_GW_BASE_URL=$RAW_URL" >> $GITHUB_ENV

      # - name: Update Frontend API URLs
      #   run: |
      #       sed -i "s|REPLACE_WITH_API_GW_BASE_URL|${API_GW_BASE_URL}|g" fisc-ai/frontend/src/App.tsx
            
      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
        working-directory: terraform

    