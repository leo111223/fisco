name: Terraform Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform action (apply or destroy)'
        required: true
        default: 'apply'

jobs:
  terraform:
    name: Terraform Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.LEO_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.LEO_SECRET_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Validate Terraform
        run: terraform validate
        working-directory: terraform

      - name: Plan Terraform
        run: terraform plan -out=tfplan
        working-directory: terraform
        env:
          TF_VAR_github_token: ${{ secrets.TOKEN_GIT }}

      - name: Apply Terraform
        if: github.event.inputs.action == 'apply' || github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: terraform
        env:
          TF_VAR_github_token: ${{ secrets.TOKEN_GIT }}
      
      - name: Get API Gateway URL from Terraform Output
        id: get_api_url
        working-directory: terraform
        run: |
            api_url=$(terraform output -raw api_gateway_url 2> /dev/null)
            echo "REACT_APP_API_URL=$api_url" >> $GITHUB_ENV
        
        
      - name: Build React Frontend with API URL
        working-directory: fisc-ai/frontend  # adjust if needed
        run: |
          echo "REACT_APP_API_URL=${{ env.REACT_APP_API_URL }}" > .env.production
          npm install
          npm run build
  
      

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
        working-directory: terraform
        env:
          TF_VAR_github_token: ${{ secrets.TOKEN_GIT }}
